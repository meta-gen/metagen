/**
 * ÌëúÏ§Ä Ïö©Ïñ¥ ÏäπÏù∏ Î≤ÑÌäº
 *
 */
$("#grd-active-standardTerms").on("click", () => {

    const checkedData = getCheckedDataIsNonNull("standardTerms");
    if(!checkedData) return;

    window.openConfirm("Ï≤¥ÌÅ¨Îêú ÌëúÏ§Ä Ïö©Ïñ¥Î•º ÏäπÏù∏ÌïòÏãúÍ≤†ÏäµÎãàÍπå?", () => {
        // ÏäπÏù∏ ÌïÑÏöî ÎåÄÏÉÅÏù¥ ÌïòÎÇòÎùºÎèÑ Ï°¥Ïû¨ÌïúÎã§Î©¥ trueÎ°ú Î∞òÌôòÎêòÏñ¥ ÏäπÏù∏Î°úÏßÅÏùÑ ÌÉà Ïàò ÏûàÍ≤å ÎêúÎã§.
        let isApproval = false;

        checkedData.forEach(e => {
            if(e.isApprovalYn === 'N'){
                isApproval = true;
            }
        });

        if(!isApproval){
            window.openAlert("ÏäπÏù∏Ïù¥ ÌïÑÏöîÌïú ÌëúÏ§Ä Ïö©Ïñ¥Í∞Ä ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.");
            return;
        }

        $.ajax({

            url: "/api/approvalStandardTerms/true",
            type: 'PATCH',
            data: JSON.stringify(checkedData),
            success : (response) => {
                if(response.result){
                    window.openAlert("Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÏäπÏù∏Ï≤òÎ¶¨ ÎêòÏóàÏäµÎãàÎã§.", () => {
                        window.searchGrid("standardTerms");
                    });
                }
            }
        });
    });
});

/**
 * ÌëúÏ§Ä Ïö©Ïñ¥ ÏäπÏù∏Ï∑®ÏÜå Î≤ÑÌäº
 *
 */
$("#grd-unactive-standardTerms").on("click", () => {

    const checkedData = getCheckedDataIsNonNull("standardTerms");
    if(!checkedData) return;

    window.openConfirm("Ï≤¥ÌÅ¨Îêú ÌëúÏ§Ä Ïö©Ïñ¥Î•º ÏäπÏù∏ÌïòÏãúÍ≤†ÏäµÎãàÍπå?", () => {
        // ÏäπÏù∏ ÌïÑÏöî ÎåÄÏÉÅÏù¥ ÌïòÎÇòÎùºÎèÑ Ï°¥Ïû¨ÌïúÎã§Î©¥ trueÎ°ú Î∞òÌôòÎêòÏñ¥ ÏäπÏù∏Î°úÏßÅÏùÑ ÌÉà Ïàò ÏûàÍ≤å ÎêúÎã§.
        let isApproval = false;

        checkedData.forEach(e => {
            if(e.isApprovalYn === 'Y'){
                isApproval = true;
            }
        });

        if(!isApproval){
            window.openAlert("ÏäπÏù∏Ï∑®ÏÜåÍ∞Ä ÌïÑÏöîÌïú ÌëúÏ§Ä Ïö©Ïñ¥Í∞Ä ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.");
            return;
        }

        $.ajax({
            url: "/api/approvalStandardTerms/false",
            type: 'PATCH',
            data: JSON.stringify(checkedData),
            success : (response) => {
                if(response.result){
                    window.openAlert("Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÏäπÏù∏Ï∑®ÏÜåÏ≤òÎ¶¨ ÎêòÏóàÏäµÎãàÎã§.", () => {
                        window.searchGrid("standardTerms");
                    });
                }
            }
        });
    });
});

/**
 * ÌëúÏ§ÄÏö©Ïñ¥ Ï∂îÍ∞Ä Î≤ÑÌäº
 */
$("#grd-add-standardTerms").on("click", () => {
    addStandardTerms();
});

/**
 * ÌëúÏ§ÄÏö©Ïñ¥ ÏÇ≠Ï†ú Î≤ÑÌäº
 */
$("#grd-delete-standardTerms").on("click", () => {
    const tableId = "standardTerms";
    const checkedData = getCheckedDataIsNonNull(tableId);
    if(!checkedData) return;

    let isApproval = true;
    checkedData.forEach((e) => {
        if(e.isApprovalYn === 'Y'){
            isApproval = false;
        }
    });

    if(!isApproval){
        window.openAlert("Ï≤¥ÌÅ¨Îêú Îç∞Ïù¥ÌÑ∞Ïóê ÏäπÏù∏Îêú Ï†ïÎ≥¥ÎèÑ Ìè¨Ìï®ÎêòÏñ¥ÏûàÏäµÎãàÎã§. ÏäπÏù∏Ïù¥ ÏôÑÎ£åÎêú Í≤ΩÏö∞, ÏÇ≠Ï†úÍ∞Ä Î∂àÍ∞ÄÎä•Ìï©ÎãàÎã§.");
        return;
    }

    window.openConfirm("Ï≤¥ÌÅ¨Îêú Îç∞Ïù¥ÌÑ∞Î•º ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?", () => {
        $.ajax({
            url : `/api/deleteDataDictionary/${tableId}`,
            type : 'DELETE',
            data : JSON.stringify(checkedData),
            success : (response) => {
                if(response.result){
                    window.openAlert("Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ÏÇ≠Ï†úÏ≤òÎ¶¨ ÎêòÏóàÏäµÎãàÎã§.", () => {
                        window.searchGrid(tableId);
                    });
                }
            }
        });
    });
});

/**
 * ÌëúÏ§ÄÏö©Ïñ¥Î•º Îì±Î°ùÌïúÎã§.
 */
function addStandardTerms(){
    const tableId = "standardTerms";

    const columnList = window.tableInstances["standardTerms"]
        .settings()
        .init()
        .columns
        .filter(col => col.data !== "id" && col.data !== "isApprovalYn")
        .map(col => {
            return {
                column: col.data,
                columnName: col.title || col.columnName || col.data
            };
        });

    const dialog = $("#mainConfirm")[0];
    const dialogTitle = $("#mainDialogTitle");
    const dialogContent = $("#mainDialogContent");

    dialogTitle.text("ÌëúÏ§ÄÏö©Ïñ¥ Ï∂îÍ∞Ä");
    dialogContent.empty(); // Ï¥àÍ∏∞Ìôî

    const form = $("<form></form>").attr("id", `edit-${tableId}`);

    const inputType = $("<input>").attr("id", "type")
        .attr("name", "type")
        .attr("type", "hidden")
        .attr("value", "C");

    form.append(inputType);

    columnList.forEach(col => {
        const key = col.column;
        const labelText = col.columnName || key;

        if (key === "commonStandardTermName") {
            const label = $("<label></label>")
                .attr("for", key)
                .text(labelText)
                .css({
                    display: "block",
                    marginTop: "10px",
                    fontWeight: "bold"
                });

            const wrapper = $("<div></div>").css({
                display: "flex",
                alignItems: "center",
                gap: "10px",
                marginBottom: "10px"
            });

            const input = $("<input>")
                .attr("type", "text")
                .attr("id", key)
                .attr("name", key)
                .prop("readonly", true)
                .css({
                    flex: "1",
                    backgroundColor: "#f0f0f0",
                    height: "38px",
                    paddingLeft: "10px",
                    border: "1px solid #ccc",
                    borderRadius: "4px"
                });

            const searchBtn = $("<button></button>")
                .attr("type", "button")
                .addClass("btn btn-secondary")
                .html("üîç")
                .css({
                    height: "38px"
                })
                .on("click", function () {
                    openDomainSearchPopup();
                });

            wrapper.append(input, searchBtn);
            form.append(label, wrapper); // label Îî∞Î°ú, wrapper Îî∞Î°ú append
        }else{

            const label = $("<label></label>")
                .text(labelText)
                .attr("for", key)
                .css("display", "block")
                .css("margin-top", "10px");

            let input;

            if (["commonStandardDomainDescription", "allowedValues"].includes(key)) {
                input = $("<textarea></textarea>")
                    .attr("id", key)
                    .attr("name", key)
                    .css("width", "100%")
                    .css("height", "60px");
            }else if(key === "revisionNumber"){
                input = $("<input>")
                    .attr("type", "number")
                    .attr("id", key)
                    .attr("name", key)
                    .css("width", "100%")
                    .on("keydown", function(event){
                        if (event.key === "e" || event.key === "E" || event.key === "+" || event.key === "-") {
                            event.preventDefault();
                        }
                    });
            } else {
                input = $("<input>")
                    .attr("type", "text")
                    .attr("id", key)
                    .attr("name", key)
                    .css("width", "100%");
            }

            // id, projectIdÎäî Ï†úÏô∏ÌïòÍ±∞ÎÇò readonly
            if (key === "id" || key === "projectId" || key === "commonStandardDomainName" || key === "allowedValues" || key === "storageFormat" || key === "displayFormat" || key === "synonyms" || key === "commonStandardTermName" || key === "commonStandardTermAbbreviation") {
                input.prop("readonly", true).css({
                        flex: "1",
                        backgroundColor: "#f0f0f0",
                        height: "30px",
                        paddingLeft: "10px",
                        border: "1px solid #ccc",
                        borderRadius: "4px"
                    });
            }

            form.append(label, input);
        }
    });

    const saveBtn = $("<button></button>")
        .attr("type", "button")
        .text("Ï∂îÍ∞Ä")
        .attr("id", "approvalSubmit")
        .attr("name", "approvalSubmit")
        .addClass("btn btn-primary")
        .css("margin-top", "20px")
        .on("click", approvalSubmitClick);

    form.append(saveBtn);
    dialogContent.append(form);

    dialog.showModal();
}

/**
 * Í∑∏Î¶¨Îìú ÏÑ†ÌÉù callback Function
 */
export function selectRow(rowData, columnList, isManager, tableId) {

    const dialogContent = $("<div></div>");
    const form = $("<form></form>").attr("id", `edit-${tableId}`);

    const inputType = $("<input>").attr("id", "type")
        .attr("name", "type")
        .attr("type", "hidden")
        .attr("value", "U");

    form.append(inputType);

    // keyÏôÄ columnNameÏùÑ Îß§ÌïëÌï† Map ÏÉùÏÑ±
    const columnMap = new Map();
    columnList.forEach(col => {
        columnMap.set(col.column, col.columnName);
    });

    for (const [key, value] of Object.entries(rowData)) {
        const labelText = columnMap.get(key) || key; // Îß§Ïπ≠ÎêòÎäî columnName ÏóÜÏúºÎ©¥ key Í∑∏ÎåÄÎ°ú ÏÇ¨Ïö©

        if (key === "commonStandardTermName") {
            const label = $("<label></label>")
                .attr("for", key)
                .text(labelText)
                .css({
                    display: "block",
                    marginTop: "10px",
                    fontWeight: "bold"
                });

            const wrapper = $("<div></div>").css({
                display: "flex",
                alignItems: "center",
                gap: "10px",
                marginBottom: "10px"
            });

            const input = $("<input>")
                .attr("type", "text")
                .attr("id", key)
                .attr("name", key)
                .val(value || "") // Í∏∞Î≥∏Í∞í Ï≤òÎ¶¨
                .prop("readonly", true)
                .css({
                    flex: "1",
                    backgroundColor: "#f0f0f0",
                    height: "38px",
                    paddingLeft: "10px",
                    border: "1px solid #ccc",
                    borderRadius: "4px"
                });
/*

            const searchBtn = $("<button></button>")
                .attr("type", "button")
                .addClass("btn btn-secondary")
                .html("üîç")
                .css({
                    height: "38px"
                })
                .on("click", function () {
                    openDomainSearchPopup();
                });
*/

            wrapper.append(input);
            form.append(label, wrapper); // label Îî∞Î°ú, wrapper Îî∞Î°ú append
        }else{

            const label = $("<label></label>")
                .text(labelText)
                .attr("for", key)
                .css("display", "block")
                .css("margin-top", "10px");

            let input;

            if (["commonStandardTermDescription", "synonyms"].includes(key)) {
                input = $("<textarea></textarea>")
                    .attr("id", key)
                    .attr("name", key)
                    .val(value)
                    .css("width", "100%")
                    .css("height", "60px");
            }else if (key === "isApprovalYn") {
                continue;
            }else if(key === "revisionNumber"){
                input = $("<input>")
                    .attr("type", "number")
                    .attr("id", key)
                    .attr("name", key)
                    .val(value)
                    .css("width", "100%")
                    .on("keydown", function(event){
                        if (event.key === "e" || event.key === "E" || event.key === "+" || event.key === "-") {
                            event.preventDefault();
                        }
                    });
            } else {
                input = $("<input>")
                    .attr("type", "text")
                    .attr("id", key)
                    .attr("name", key)
                    .val(value)
                    .css("width", "100%");
            }

            // ÏàòÏ†ï Î∂àÍ∞Ä ÌïÑÎìú Ï≤òÎ¶¨
            if (key === "id" || key === "projectId" || key === "commonStandardDomainName" || key === "allowedValues" || key === "storageFormat" || key === "displayFormat" || key === "synonyms" || key === "commonStandardTermName" || key === "commonStandardTermAbbreviation") {
                input.prop("readonly", true);
                input.css("background-color", "#f0f0f0");
            }
            form.append(label, input);
        }
    }

    if(isManager || rowData['isApprovalYn'] === 'N'){
        const saveBtn = $("<button></button>")
            .attr("type", "button")
            .text("Ï†ÄÏû•")
            .attr("id", "approvalSubmit")
            .attr("name", "approvalSubmit")
            .addClass("btn btn-primary")
            .css("margin-top", "20px")
            .on("click", approvalSubmitClick);

        form.append(saveBtn);
    }else{
        $(`#edit-${tableId} input`).each((index, data) => {
            $(data).prop("readonly",true);
            $(data).css("background-color", "#f0f0f0");
        });
    }

    dialogContent.append(form);

    openDialog("div", {
        title: "ÌëúÏ§ÄÏö©Ïñ¥ ÏàòÏ†ï",
        content: dialogContent
    });
}

window.gridCallbacks["standardTerms_selectRow"] = selectRow;


/**
 * Ïö©Ïñ¥ Í≤ÄÏÉâ ÌåùÏóÖÏùÑ Ìò∏Ï∂úÌïúÎã§.
 */
function openDomainSearchPopup(){

    const value = $("#commonStandardTermName").val();

    const popup = window.open(
        "/popup/standardTermSearch",  // ÌåùÏóÖÏúºÎ°ú ÎùÑÏö∏ URL
        "ÏïΩÏñ¥ Î™Ö Í≤ÄÏÉâ",     // ÌåùÏóÖ Ïù¥Î¶Ñ (Ï§ëÎ≥µ Î∞©ÏßÄÏö©)
        "width=600,height=800,resizable=yes,scrollbars=yes"
    );

    popup.name = JSON.stringify({ "standardTermName" : value });
}

function receiveTermAbbreviation(data){
    $("#commonStandardTermAbbreviation").val(data.abbreviation);
    $("#commonStandardDomainName").val(data.domainName);
    $("#allowedValues").val(data.allowedValues);
    $("#storageFormat").val(data.storageFormat);
    $("#displayFormat").val(data.displayFormat);
    $("#synonyms").val(data.synonyms);
    $("#commonStandardTermName").val(data.termWordText);
}

window.popupFunction = window.popupFunction || {}; // ÌòπÏãú ÏóÜÏùÑ Í≤ΩÏö∞ Î∞©ÏßÄ
window.popupFunction['receiveTermAbbreviation'] = receiveTermAbbreviation;


/**
 * Ï†ÄÏû•/Ï∂îÍ∞ÄÎ≤ÑÌäºÏùÑ ÎàåÎ†§ Ï†ÄÏû•ÏùÑ ÏàòÌñâÌïúÎã§.
 * @param e
 */
function approvalSubmitClick(e){
    e.preventDefault();

    const tableId = "standardTerms";

    const requiredFields = [
        "commonStandardDomainName",
        "allowedValues",
        "storageFormat",
        "displayFormat",
        "synonyms",
        "commonStandardTermName",
        "commonStandardTermDescription"
    ];

    const form = $(e.target).closest("form");
    const inputs = form.find("input, textarea");

    const formData = {};
    let isValid = true;

    let type = "C";

    inputs.each(function () {
        const $input = $(this);
        const name = $input.attr("name");
        const value = $input.val();

        // Í∞í Ï†ÄÏû•
        if(name !== "type"){
            formData[name] = value;
        }else{
            type = value;
        }

        // ÌïÑÏàòÍ∞í Ï≤¥ÌÅ¨
        if (requiredFields.includes(name)) {
            if (!value || value.trim() === "") {
                const labelText = form.find(`label[for='${name}']`).text() || name;
                alert(`ÌïÑÏàòÍ∞í ÎàÑÎùΩ: ${labelText}`);
                $input.focus();
                isValid = false;
                return false; // .each Ï§ëÎã®
            }
        }
    });

    if (!isValid) return;

    const url = "/api/" + (type === "C" ? `insertDataDictionary/${tableId}` : `updateDataDictionary/${tableId}`);
    const ajaxType = type === "C" ? "POST" : "PUT"

    $.ajax({
        url: url,
        type : ajaxType,
        data : JSON.stringify(formData),
        success : (response) => {

            if(response.result){
                window.openAlert(`Ï†ïÏÉÅÏ†ÅÏúºÎ°ú ${type === "C" ? "Îì±Î°ù" : "ÏàòÏ†ï"}ÎêòÏóàÏäµÎãàÎã§.`, () => {
                    window.closeDialog("div");
                    window.searchGrid(tableId);
                });
            }
        }
    })


}
